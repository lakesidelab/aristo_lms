{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (factory) {\n  \"use strict\";\n\n  var sortable,\n      jq,\n      _this = this;\n\n  if (typeof define === \"function\" && define.amd) {\n    try {\n      define([\"sortablejs\", \"jquery\"], function (Sortable, $) {\n        sortable = Sortable;\n        jq = $;\n        checkErrors();\n        factory(Sortable, $);\n      });\n    } catch (err) {\n      checkErrors();\n    }\n\n    return;\n  } else if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object') {\n    try {\n      sortable = require('sortablejs');\n      jq = require('jquery');\n    } catch (err) {}\n  }\n\n  if (typeof jQuery === 'function' || typeof $ === 'function') {\n    jq = jQuery || $;\n  }\n\n  if (typeof Sortable !== 'undefined') {\n    sortable = Sortable;\n  }\n\n  function checkErrors() {\n    if (!jq) {\n      throw new Error('jQuery is required for jquery-sortablejs');\n    }\n\n    if (!sortable) {\n      throw new Error('SortableJS is required for jquery-sortablejs (https://github.com/SortableJS/Sortable)');\n    }\n  }\n\n  checkErrors();\n  factory(sortable, jq);\n})(function (Sortable, $) {\n  \"use strict\";\n\n  $.fn.sortable = function (options) {\n    var retVal,\n        args = arguments;\n    this.each(function () {\n      var $el = $(this),\n          sortable = $el.data('sortable');\n\n      if (!sortable && (options instanceof Object || !options)) {\n        sortable = new Sortable(this, options);\n        $el.data('sortable', sortable);\n      } else if (sortable) {\n        if (options === 'destroy') {\n          sortable.destroy();\n          $el.removeData('sortable');\n        } else if (options === 'widget') {\n          retVal = sortable;\n        } else if (typeof sortable[options] === 'function') {\n          retVal = sortable[options].apply(sortable, [].slice.call(args, 1));\n        } else if (options in sortable.options) {\n          retVal = sortable.option.apply(sortable, args);\n        }\n      }\n    });\n    return retVal === void 0 ? this : retVal;\n  };\n});","map":null,"metadata":{},"sourceType":"module"}